{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/ptt.js"],"sourcesContent":["// src/helpers.js https://github.com/Announcement/utemplate\r\n\r\n\r\n/** @module helpers */\r\n\r\n/**\r\n * Lazy way of turning an item into an Array\r\n * @function array$\r\n *\r\n * @param {Object} it - Array like object\r\n *\r\n * @return {Array} - implicit array object\r\n */\r\nlet array$ = function(it) {\r\n\treturn Array.prototype.slice.call(it, 0);\r\n};\r\n\r\n/**\r\n * Appends values to an Array,\r\n * but first replaces undefined values before adding to the end\r\n *\r\n * @function combine\r\n *\r\n * @param {Array} array - list of existing items\r\n * @param {Array} values - proposed additions to the lsit\r\n *\r\n * @return {Array} - collective array\r\n */\r\nfunction combine(array, values) {\r\n\tlet index;\r\n\r\n\tarray = array.concat([]);\r\n\r\n\twhile ((index = array.indexOf(undefined)) !== -1 && values.length > 0) {\r\n\t\tarray[index] = values.shift();\r\n\t}\r\n\r\n\treturn array.concat(values);\r\n}\r\n\r\n/**\r\n * Returns a modified function with lazy option assocations\r\n *\r\n * @function curry\r\n *\r\n * @param {Function} method - function to be curried\r\n *\r\n * @return {Function} curried functions\r\n */\r\nfunction curry$(method) {\r\n  /**\r\n  * Generated method through currying, allowing chainibility\r\n  * @function transform\r\n  *\r\n  * @see combine\r\n  * @this\r\n  *\r\n  * @param {Array} params - arguments array\r\n  *\r\n  * @return {Object} piped output from source curry method\r\n  */\r\n\tfunction transform(params) {\r\n\t\tlet context;\r\n\r\n\t\treturn function(...input) {\r\n\t\t\tlet args = combine(params, array$(arguments));\r\n\r\n\t\t\tcontext = context || this;\r\n\r\n\t\t\tif (args.length < method.length || args.some((it) => it === undefined )) {\r\n\t\t\t\treturn transform(args);\r\n\t\t\t} else {\r\n\t\t\t\treturn method.apply(context, args);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\treturn method.length <= 1 ? method : transform([]);\r\n}\r\n\r\n/**\r\n * Returns a modified version of a function with negated boolean output\r\n *\r\n * @function negated\r\n *\r\n * @param {Function} it - method to be negated\r\n *\r\n * @return {Function}\r\n */\r\nfunction negated$(it) {\r\n\treturn function() {\r\n\t\treturn !it.apply(this, arguments);\r\n\t};\r\n}\r\n\r\n/**\r\n * Pairs an object into a set of {key, value} arrays\r\n *\r\n * @function pair\r\n *\r\n * @param {Object} object - collection to be paired\r\n *\r\n * @return {Array.<{name: string, value}>}\r\n */\r\nfunction pair(object) {\r\n\treturn Object.keys(object).map((key) => {\r\n\t\treturn {key: key, value: object[key]};\r\n\t});\r\n}\r\n\r\n/**\r\n * Curried shortcut to hasOwnProperty\r\n *\r\n * @function has\r\n *\r\n * @param {Object} object - collection containing property\r\n * @param {String} property - property name to be checked\r\n *\r\n * @return {boolean}\r\n */\r\n\r\nlet has = curry$((object, property) => {\r\n\treturn object.hasOwnProperty(property);\r\n});\r\n\r\n/**\r\n * Recursively brings arrays to the highest level\r\n *\r\n * @function flatten\r\n *\r\n * @param {Array.<Array>} array - container of the set\r\n *\r\n * @return Array\r\n */\r\nfunction flatten(array) {\r\n\tlet isArray;\r\n\tlet toArray;\r\n\tlet fromArray;\r\n\r\n\tisArray = (it) => it.constructor === Array;\r\n\ttoArray = (it) => isArray(it) ? it : [it];\r\n\tfromArray = (a, b) => a.concat(b);\r\n\r\n\twhile (array.some(isArray)) {\r\n\t\tarray = array.map(toArray).reduce(fromArray);\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Compares reference object to another object\r\n *\r\n * @function equals\r\n *\r\n * @see has\r\n * @see pair\r\n *\r\n * @param {Object} reference - what should be compared to\r\n * @param {Object} object - what we are comparing\r\n *\r\n * @return {boolean}\r\n */\r\nfunction equals(reference, object) {\r\n\t// Are they of the same type?\r\n\tif (typeof reference !== typeof object ||\r\n\t\t\treference.constructor !== object.constructor) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Do we need to check recursively?\r\n\tif (reference.constructor !== Object) {\r\n\t\treturn reference === object;\r\n\t}\r\n\r\n\treturn flatten([\r\n\t\tpair(reference),\r\n\t\tpair(object),\r\n\t])\r\n\t.every((item) => {\r\n\t\treturn;\r\n\t\thas(reference)(item.key) &&\r\n\t\thas(object)(item.key) &&\r\n\t\tequals(reference[item.key], object[item.key]);\r\n\t});\r\n}\r\n/**\r\n * Checks to see if an item exists (isn't null or undefined)\r\n * @function exists\r\n *\r\n * @param {Object} it - the item in question of existance\r\n *\r\n * @return {boolean}\r\n */\r\nfunction exists(it) {\r\n\treturn it !== undefined && it !== null;\r\n}\r\n\r\n/**\r\n * Attempts to apply mutation to subject, but returns the unmodified subject on failure\r\n *\r\n * @function attempt\r\n *\r\n * @see array$\r\n *\r\n * @param {Function} mutation - mutator function to be called on the subject\r\n * @param {Object} subject - any input that should be mutated\r\n *\r\n * @return {Object}\r\n */\r\nfunction attempt(mutation, subject) {\r\n\tlet parameters;\r\n\tlet alternative;\r\n\tlet response;\r\n\r\n\tparameters = array$(arguments).slice(1);\r\n\talternative = parameters.length === 1 ? parameters[0] : parameters;\r\n\r\n\tresponse = mutation.apply(this, parameters);\r\n\r\n\treturn response || alternative;\r\n}\r\n\r\n/**\r\n * Clones an object\r\n *\r\n * @function clone\r\n *\r\n * @param {Object} object - object to be cloned\r\n *\r\n * @return {Object}\r\n */\r\nfunction clone(object) {\r\n\treturn Object.assign({}, object);\r\n}\r\n\r\n/**\r\n * Injects a transformer into each element of a collection\r\n *\r\n * @name inject(it, transformer)\r\n *\r\n * @see attempt\r\n *\r\n * @param {Object} it - collection\r\n * @param {Function} tranform - mutator function\r\n *\r\n * @return {Object.<string, Function>}\r\n */\r\nfunction inject(it, transform) {\r\n\tlet copy = {};\r\n\r\n\tfunction cycle(key, value) {\r\n\t\tif (value === copy) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'function') {\r\n\t\t\treturn attempt(transform, value);\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'object') {\r\n\t\t\treturn inject(value, transform);\r\n\t\t}\r\n\r\n\t\t// return value;\r\n\t}\r\n\r\n\tfor (let key in it) {\r\n\t\tcopy[key] = cycle(key, it[key]);\r\n\t}\r\n\r\n\treturn copy;\r\n};\r\n\r\n/**\r\n * Prepares function collection by currying and adding a not chain\r\n *\r\n * @name prepare(it)\r\n *\r\n * @see inject\r\n * @see negated$\r\n * @see curry$\r\n *\r\n * @param {Object.<string, Function>} it - collection of functions\r\n *\r\n * @return {Object.<string, Function>} - curried functions object\r\n */\r\nfunction prepare(it) {\r\n\tlet not, tmp;\r\n\r\n\tnot = inject(it, negated$);\r\n\tnot = inject(not, curry$);\r\n\ttmp = inject(it, curry$);\r\n\r\n\ttmp.not = not;\r\n\r\n\treturn tmp;\r\n}\r\n\r\n/**\r\n * Applies functions to a value and moves down the chain if possible\r\n *\r\n * @function decompose\r\n *\r\n * @see exists\r\n * @see attempt\r\n * @see array$\r\n *\r\n * @param {Array} array - list of functions to be applied\r\n * @param {Object} initial - optional initial item\r\n *\r\n * @return Object\r\n */\r\nfunction decompose(array, initial) {\r\n\tlet composer = (previous, current) => attempt(current, previous);\r\n\tlet reducer = (it) => array.reduce(composer, initial || it);\r\n\r\n\treturn initial ? reducer(initial) : reducer;\r\n}\r\n\r\nlet is$ = {\r\n\telement: (object) => {\r\n\t\t// return object instanceof Element;\r\n\t\treturn object.nodeType === document.ELEMENT_NODE;\r\n\t},\r\n\r\n\tfragment: (object) => {\r\n\t\t// return object.constructor === DocumentFragment;\r\n\t\treturn object.nodeType === document.DOCUMENT_FRAGMENT_NODE;\r\n\t},\r\n\r\n\ttext: (object) => {\r\n\t\t// return child.constructor === Text;\r\n\t\treturn object.nodeType === document.TEXT_NODE;\r\n\t},\r\n\r\n\tequal: equals,\r\n\texistant: exists,\r\n};\r\n\r\nis$ = prepare(is$);\r\n\r\nclass Compare {\r\n\tconstructor(reference) {\r\n\t\tthis.reference = reference;\r\n\t}\r\n\r\n\telement(object) {\r\n\t\tlet result;\r\n\r\n\t\tlet isElementNode = (it) =>\r\n\t\t\tit.nodeType === document.ELEMENT_NODE;\r\n\r\n\t\t// let isElement = it =>\r\n\t\t// \tobject instanceof Element;\r\n\r\n\t\tresult = isElementNode(object);\r\n\r\n\t\treturn result === !this.reference.polarity;\r\n\t}\r\n\r\n\tfragment(object) {\r\n\t\tlet result;\r\n\r\n\t\tlet isDocumentFragmentNode = (it) =>\r\n\t\t\tit.nodeType === document.DOCUMENT_FRAGMENT_NODE;\r\n\r\n\t\t// let isDocumentFragment = it =>\r\n\t\t// \tit.constructor === DocumentFragment;\r\n\r\n\t\tresult = isDocumentFragmentNode(object);\r\n\r\n\t\treturn result === !this.reference.polarity;\r\n\t}\r\n\r\n\ttext(object) {\r\n\t\tlet isTextNode = (it) =>\r\n\t\t\tobject.nodeType === document.TEXT_NODE;\r\n\r\n\t\t// let isText = it =>\r\n\t\t// \tchild.constructor === Text;\r\n\r\n\t\tresult = isTextNode(object);\r\n\r\n\t\treturn result === !this.reference.polarity;\r\n\t}\r\n\r\n\tequals(object, $reference) {\r\n\t\tlet reference = $reference || $reference;\r\n\t}\r\n\r\n\texistant(object) {\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport let is = is$;\r\nexport let as = {\r\n\tarray: array$,\r\n\tpair: pair,\r\n\tmethod: curry$,\r\n\tflatten: flatten,\r\n\tdecomposed: decompose,\r\n\tattempt: attempt,\r\n};\r\n//\r\n// console.log(is$.not.equal({a: 'b'}, {a: 'b', c: 'd'}));\r\n","import { version, description } from '../package.json';\r\n\r\nimport * as program from 'commander';\r\n// import highland from 'highland';\r\nimport * as chalk from 'chalk';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\nimport * as http from 'http';\r\nimport * as https from 'https';\r\nimport * as cluster from 'cluster';\r\nimport * as readline from 'readline';\r\nimport * as socks from 'socksv5';\r\nimport express from 'express';\r\nimport Socket from 'socket.io';\r\n\r\nimport {as} from './helpers';\r\n\r\nlet decode = it => {\r\n  return {\r\n    host: it.match(/^[^:]+/m)[0],\r\n    port: parseInt(it.match(/\\d+$/m)[0], 10)\r\n  };\r\n};\r\n\r\nconst encoding = 'utf8';\r\nlet config = {encoding};\r\nconst target = 'https://api.ipify.org/?format=json';\r\n\r\nfunction configure(it) {\r\n  return {\r\n    host: it.host,\r\n    port: it.port,\r\n    path: target,\r\n    headers: {\r\n      Host: target\r\n    },\r\n    agent: false\r\n  };\r\n}\r\n\r\nif (cluster.isMaster) {\r\n  let app = express();\r\n  let httpd = http.Server(app);\r\n  let io = Socket(httpd);\r\n\r\n  app.use(express.static('public'));\r\n\r\n  program\r\n    .usage('-5 --file ../proxies.txt')\r\n    .version(version)\r\n    .description(description)\r\n    .option('-f, --file <input>', 'Parse an input file line by line')\r\n    .option('-5, --socks5', 'Test for SOCKet Secure Layer 5')\r\n    // .option('-4, --socks4', 'Test for SOCKet Secure Layer 4')\r\n    .option('-j, --threads', 'Number of threads/clusters to run on')\r\n    .option('--port <port>', 'Set the httpd interface port to listen on')\r\n    .parse(process.argv);\r\n\r\n  let listener = httpd.listen(program.port || null);\r\n\r\n  if(!program.port) {\r\n    console.log(chalk.yellow('Interface'), 'Listening on port', chalk.blue(httpd.address().port));\r\n  }\r\n\r\n  let threads = program.threads || os.cpus().length;\r\n\r\n  let fromFileSystem = () => {\r\n    if (!program.file) return false;\r\n    let realPath = path.resolve(program.file);\r\n    let readStream = fs.createReadStream(realPath, config);\r\n    return readStream;\r\n  }\r\n\r\n  let input = as.decomposed([fromFileSystem], process.stdin);\r\n\r\n  let rl = readline.createInterface({input});\r\n\r\n  cluster.setupMaster({\r\n    silent: true\r\n  });\r\n\r\n  class Runner {\r\n    constructor(callback) {\r\n      this.callback = callback;\r\n      this.running = 0;\r\n      this.completed = 0;\r\n      this.queue = [];\r\n    }\r\n\r\n    initialize() {\r\n      let self = this;\r\n\r\n      if (this.queue.length === 0) return false;\r\n      if (this.running > 0) return false;\r\n\r\n      this.running++;\r\n\r\n      let item = this.queue.shift();\r\n      let worker = cluster.fork();\r\n\r\n      worker.send(item);\r\n\r\n      worker.on('message', it => {\r\n        let amount = self.queue.length + self.running + self.completed;\r\n\r\n        it.identity = worker.id;\r\n        it.identifier = worker.process.pid;\r\n\r\n        let progress = Math.round(worker.id / amount * 100, 2);\r\n\r\n        process.stdout.clearLine();\r\n        process.stdout.cursorTo(0);\r\n        process.stdout.write(`${progress}% - ${worker.id} @ ${it.status} of ${amount} \"${it.title}\"`);\r\n\r\n        if (it.title === 'HTTP proxy verified') {\r\n          console.log(it);\r\n        }\r\n\r\n        io.emit('message', it);\r\n      })\r\n\r\n      worker.on('exit', () => {\r\n        self.running--;\r\n        self.completed++;\r\n        self.initialize();\r\n      });\r\n\r\n      worker.on('error', error => {\r\n        console.log('An error has occured');\r\n      });\r\n    }\r\n\r\n    provide(information) {\r\n      this.queue.push(information);\r\n      this.initialize();\r\n    }\r\n  }\r\n\r\n\r\n  let runner = new Runner(it => {});\r\n\r\n  rl.on('line', it => runner.provide(it));\r\n}\r\n\r\nif (cluster.isWorker) {\r\n  var time = new Date();\r\n  var increment = 0;\r\n\r\n  let delay = () => {\r\n    let now = new Date();\r\n    let difference = now - time;\r\n    time = now;\r\n    return difference;\r\n  };\r\n\r\n  let send = (it, title) => {\r\n    process.send({\r\n      status: ++increment,\r\n      message: it,\r\n      title: title || 'Status update',\r\n      elapsed: delay()\r\n    });\r\n  };\r\n\r\n  process.on('message', function(message) {\r\n    let decoded = decode(message);\r\n    let proxyOptions = configure(decoded);\r\n\r\n    let socksOptions = {\r\n      proxyHost: decoded.host,\r\n      proxyPort: decoded.port,\r\n      auths: [ socks.auth.None() ]\r\n    };\r\n\r\n    send(decoded, 'Decoded message');\r\n\r\n    let responseCallback = response => {\r\n      send('Response has been acquired');\r\n\r\n      const statusCode = response.statusCode;\r\n      const contentType = response.headers['content-type'];\r\n\r\n      var raw = '';\r\n\r\n      if (response.statusCode !== 200) {\r\n        send('bad status code', 'Request Error');\r\n        process.exit(0);\r\n      }\r\n\r\n      if (!/^(text|application)\\/json/.test(contentType)) {\r\n        send('bad content-type', 'Request Error');\r\n        process.exit(0)\r\n      }\r\n\r\n      send('Headers verified');\r\n\r\n      response.setEncoding(encoding);\r\n\r\n      response.on('data', data => {\r\n        send('Data packet received');\r\n        raw += data;\r\n      });\r\n\r\n      response.on('end', () => {\r\n        try {\r\n          let parsed = JSON.parse(raw);\r\n          send(parsed, 'HTTP proxy verified');\r\n        } catch (ex) {\r\n          send(ex.toString());\r\n        } finally {\r\n          process.exit(0);\r\n        }\r\n      });\r\n\r\n      response.on('error', error => {\r\n        send(error, 'Response Error');\r\n        process.exit(0);\r\n      });\r\n    }\r\n\r\n    send('Attempting SOCKSv5 Proxy Check');\r\n    https.get(socksOptions, responseCallback);\r\n\r\n    send('Attempting HTTP Proxy Check');\r\n    https.get(proxyOptions, responseCallback);\r\n  });\r\n}\r\n"],"names":["array$","it","Array","prototype","slice","call","combine","array","values","index","concat","indexOf","undefined","length","shift","curry$","method","transform","params","context","input","args","arguments","some","apply","negated$","pair","object","Object","keys","map","key","value","has","property","hasOwnProperty","flatten","isArray","toArray","fromArray","constructor","a","b","reduce","equals","reference","every","item","exists","attempt","mutation","subject","parameters","alternative","response","inject","copy","cycle","prepare","not","tmp","decompose","initial","composer","previous","current","reducer","is$","nodeType","document","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","TEXT_NODE","Compare","result","isElementNode","polarity","isDocumentFragmentNode","isTextNode","$reference","as","decode","match","parseInt","encoding","config","target","configure","host","port","cluster","app","express","httpd","http","io","Socket","use","static","version","description","option","parse","process","argv","listener","listen","program","log","chalk","address","threads","os","fromFileSystem","realPath","path","readStream","fs","decomposed","stdin","rl","readline","Runner","callback","running","completed","queue","self","worker","send","on","amount","identity","id","identifier","pid","progress","Math","round","stdout","clearLine","cursorTo","write","status","title","emit","initialize","information","push","runner","provide","time","increment","Date","delay","now","difference","message","decoded","proxyOptions","socksOptions","socks","None","responseCallback","statusCode","contentType","headers","raw","exit","test","setEncoding","data","parsed","JSON","ex","toString","error"],"mappings":"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"}