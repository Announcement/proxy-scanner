{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/ptt.js"],"sourcesContent":["// src/helpers.js https://github.com/Announcement/utemplate\n\n\n/** @module helpers */\n\n/**\n * Lazy way of turning an item into an Array\n * @function array$\n *\n * @param {Object} it - Array like object\n *\n * @return {Array} - implicit array object\n */\nlet array$ = function(it) {\n\treturn Array.prototype.slice.call(it, 0);\n};\n\n/**\n * Appends values to an Array,\n * but first replaces undefined values before adding to the end\n *\n * @function combine\n *\n * @param {Array} array - list of existing items\n * @param {Array} values - proposed additions to the lsit\n *\n * @return {Array} - collective array\n */\nfunction combine(array, values) {\n\tlet index;\n\n\tarray = array.concat([]);\n\n\twhile ((index = array.indexOf(undefined)) !== -1 && values.length > 0) {\n\t\tarray[index] = values.shift();\n\t}\n\n\treturn array.concat(values);\n}\n\n/**\n * Returns a modified function with lazy option assocations\n *\n * @function curry\n *\n * @param {Function} method - function to be curried\n *\n * @return {Function} curried functions\n */\nfunction curry$(method) {\n  /**\n  * Generated method through currying, allowing chainibility\n  * @function transform\n  *\n  * @see combine\n  * @this\n  *\n  * @param {Array} params - arguments array\n  *\n  * @return {Object} piped output from source curry method\n  */\n\tfunction transform(params) {\n\t\tlet context;\n\n\t\treturn function(...input) {\n\t\t\tlet args = combine(params, array$(arguments));\n\n\t\t\tcontext = context || this;\n\n\t\t\tif (args.length < method.length || args.some((it) => it === undefined )) {\n\t\t\t\treturn transform(args);\n\t\t\t} else {\n\t\t\t\treturn method.apply(context, args);\n\t\t\t}\n\t\t};\n\t}\n\treturn method.length <= 1 ? method : transform([]);\n}\n\n/**\n * Returns a modified version of a function with negated boolean output\n *\n * @function negated\n *\n * @param {Function} it - method to be negated\n *\n * @return {Function}\n */\nfunction negated$(it) {\n\treturn function() {\n\t\treturn !it.apply(this, arguments);\n\t};\n}\n\n/**\n * Pairs an object into a set of {key, value} arrays\n *\n * @function pair\n *\n * @param {Object} object - collection to be paired\n *\n * @return {Array.<{name: string, value}>}\n */\nfunction pair(object) {\n\treturn Object.keys(object).map((key) => {\n\t\treturn {key: key, value: object[key]};\n\t});\n}\n\n/**\n * Curried shortcut to hasOwnProperty\n *\n * @function has\n *\n * @param {Object} object - collection containing property\n * @param {String} property - property name to be checked\n *\n * @return {boolean}\n */\n\nlet has = curry$((object, property) => {\n\treturn object.hasOwnProperty(property);\n});\n\n/**\n * Recursively brings arrays to the highest level\n *\n * @function flatten\n *\n * @param {Array.<Array>} array - container of the set\n *\n * @return Array\n */\nfunction flatten(array) {\n\tlet isArray;\n\tlet toArray;\n\tlet fromArray;\n\n\tisArray = (it) => it.constructor === Array;\n\ttoArray = (it) => isArray(it) ? it : [it];\n\tfromArray = (a, b) => a.concat(b);\n\n\twhile (array.some(isArray)) {\n\t\tarray = array.map(toArray).reduce(fromArray);\n\t}\n\n\treturn array;\n}\n\n/**\n * Compares reference object to another object\n *\n * @function equals\n *\n * @see has\n * @see pair\n *\n * @param {Object} reference - what should be compared to\n * @param {Object} object - what we are comparing\n *\n * @return {boolean}\n */\nfunction equals(reference, object) {\n\t// Are they of the same type?\n\tif (typeof reference !== typeof object ||\n\t\t\treference.constructor !== object.constructor) {\n\t\treturn false;\n\t}\n\n\t// Do we need to check recursively?\n\tif (reference.constructor !== Object) {\n\t\treturn reference === object;\n\t}\n\n\treturn flatten([\n\t\tpair(reference),\n\t\tpair(object),\n\t])\n\t.every((item) => {\n\t\treturn;\n\t\thas(reference)(item.key) &&\n\t\thas(object)(item.key) &&\n\t\tequals(reference[item.key], object[item.key]);\n\t});\n}\n/**\n * Checks to see if an item exists (isn't null or undefined)\n * @function exists\n *\n * @param {Object} it - the item in question of existance\n *\n * @return {boolean}\n */\nfunction exists(it) {\n\treturn it !== undefined && it !== null;\n}\n\n/**\n * Attempts to apply mutation to subject, but returns the unmodified subject on failure\n *\n * @function attempt\n *\n * @see array$\n *\n * @param {Function} mutation - mutator function to be called on the subject\n * @param {Object} subject - any input that should be mutated\n *\n * @return {Object}\n */\nfunction attempt(mutation, subject) {\n\tlet parameters;\n\tlet alternative;\n\tlet response;\n\n\tparameters = array$(arguments).slice(1);\n\talternative = parameters.length === 1 ? parameters[0] : parameters;\n\n\tresponse = mutation.apply(this, parameters);\n\n\treturn response || alternative;\n}\n\n/**\n * Clones an object\n *\n * @function clone\n *\n * @param {Object} object - object to be cloned\n *\n * @return {Object}\n */\nfunction clone(object) {\n\treturn Object.assign({}, object);\n}\n\n/**\n * Injects a transformer into each element of a collection\n *\n * @name inject(it, transformer)\n *\n * @see attempt\n *\n * @param {Object} it - collection\n * @param {Function} tranform - mutator function\n *\n * @return {Object.<string, Function>}\n */\nfunction inject(it, transform) {\n\tlet copy = {};\n\n\tfunction cycle(key, value) {\n\t\tif (value === copy) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\treturn attempt(transform, value);\n\t\t}\n\n\t\tif (typeof value === 'object') {\n\t\t\treturn inject(value, transform);\n\t\t}\n\n\t\t// return value;\n\t}\n\n\tfor (let key in it) {\n\t\tcopy[key] = cycle(key, it[key]);\n\t}\n\n\treturn copy;\n};\n\n/**\n * Prepares function collection by currying and adding a not chain\n *\n * @name prepare(it)\n *\n * @see inject\n * @see negated$\n * @see curry$\n *\n * @param {Object.<string, Function>} it - collection of functions\n *\n * @return {Object.<string, Function>} - curried functions object\n */\nfunction prepare(it) {\n\tlet not, tmp;\n\n\tnot = inject(it, negated$);\n\tnot = inject(not, curry$);\n\ttmp = inject(it, curry$);\n\n\ttmp.not = not;\n\n\treturn tmp;\n}\n\n/**\n * Applies functions to a value and moves down the chain if possible\n *\n * @function decompose\n *\n * @see exists\n * @see attempt\n * @see array$\n *\n * @param {Array} array - list of functions to be applied\n * @param {Object} initial - optional initial item\n *\n * @return Object\n */\nfunction decompose(array, initial) {\n\tlet composer = (previous, current) => attempt(current, previous);\n\tlet reducer = (it) => array.reduce(composer, initial || it);\n\n\treturn initial ? reducer(initial) : reducer;\n}\n\nlet is$ = {\n\telement: (object) => {\n\t\t// return object instanceof Element;\n\t\treturn object.nodeType === document.ELEMENT_NODE;\n\t},\n\n\tfragment: (object) => {\n\t\t// return object.constructor === DocumentFragment;\n\t\treturn object.nodeType === document.DOCUMENT_FRAGMENT_NODE;\n\t},\n\n\ttext: (object) => {\n\t\t// return child.constructor === Text;\n\t\treturn object.nodeType === document.TEXT_NODE;\n\t},\n\n\tequal: equals,\n\texistant: exists,\n};\n\nis$ = prepare(is$);\n\nclass Compare {\n\tconstructor(reference) {\n\t\tthis.reference = reference;\n\t}\n\n\telement(object) {\n\t\tlet result;\n\n\t\tlet isElementNode = (it) =>\n\t\t\tit.nodeType === document.ELEMENT_NODE;\n\n\t\t// let isElement = it =>\n\t\t// \tobject instanceof Element;\n\n\t\tresult = isElementNode(object);\n\n\t\treturn result === !this.reference.polarity;\n\t}\n\n\tfragment(object) {\n\t\tlet result;\n\n\t\tlet isDocumentFragmentNode = (it) =>\n\t\t\tit.nodeType === document.DOCUMENT_FRAGMENT_NODE;\n\n\t\t// let isDocumentFragment = it =>\n\t\t// \tit.constructor === DocumentFragment;\n\n\t\tresult = isDocumentFragmentNode(object);\n\n\t\treturn result === !this.reference.polarity;\n\t}\n\n\ttext(object) {\n\t\tlet isTextNode = (it) =>\n\t\t\tobject.nodeType === document.TEXT_NODE;\n\n\t\t// let isText = it =>\n\t\t// \tchild.constructor === Text;\n\n\t\tresult = isTextNode(object);\n\n\t\treturn result === !this.reference.polarity;\n\t}\n\n\tequals(object, $reference) {\n\t\tlet reference = $reference || $reference;\n\t}\n\n\texistant(object) {\n\n\t}\n\n}\n\nexport let is = is$;\nexport let as = {\n\tarray: array$,\n\tpair: pair,\n\tmethod: curry$,\n\tflatten: flatten,\n\tdecomposed: decompose,\n\tattempt: attempt,\n};\n//\n// console.log(is$.not.equal({a: 'b'}, {a: 'b', c: 'd'}));\n","import { version, description } from '../package.json';\n\nimport {as} from './helpers';\n\nimport express from 'express';\nimport Socket from 'socket.io';\n\nimport * as program from 'commander';\nimport * as chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as cluster from 'cluster';\nimport * as readline from 'readline';\nimport * as socks from 'socksv5';\n\nconst encoding = 'utf8';\n\n// Quick and Dirty File Line Parsing Decoder\nlet decode = it => {\n  return {\n    host: it.match(/^[^:]+/m)[0],\n    port: parseInt(it.match(/\\d+$/m)[0], 10)\n  };\n};\n\nlet config = {encoding};\n\n// HTTP Proxy Support\nfunction configureProxy(it) {\n  return {\n    host: it.host,\n    port: it.port,\n    path: 'https://api.ipify.org',\n    headers: {\n      Host: 'api.ipify.org'\n    }\n  };\n}\n\n// SOCKSv5 Proxy Support\nfunction configureSocks(it) {\n  let socksConfig = {\n    proxyHost: it.host,\n    proxyPort: it.port,\n    auths: [ socks.auth.None() ]\n  };\n\n  return {\n    host: 'api.ipify.org',\n    port: 443,\n    path: '/',\n    agent: new socks.HttpsAgent(socksConfig)\n  };\n}\n\n// Main Process\nif (cluster.isMaster) {\n\n  // The HTTPd Interface\n  let app = express();\n  let httpd = http.Server(app);\n  let io = Socket(httpd);\n\n  // Serve the HTTPd Static Interface Driver\n  app.use(express.static('public'));\n\n  // Command Line Interface Configuration\n  program\n    // Example usage\n    .usage('-5 --file ../proxies.txt')\n\n    // Pulled from package.json\n    .version(version)\n    .description(description)\n\n    // Options\n    .option('-f, --file <input>', 'Parse an input file line by line')\n    .option('-5, --socks5', 'Test for SOCKet Secure Layer 5')\n    .option('-4, --socks4', 'Test for SOCKet Secure Layer 4')\n    .option('-j, --threads <amount>', 'Number of threads/clusters to run on')\n    .option('-s, --timeout <seconds>', 'Timeout to kill, defaults to infinity')\n    .option('--port <port>', 'Set the httpd interface port to listen on')\n\n    // Provide it with arguments passed to the process\n    .parse(process.argv);\n\n  // Allow the HTTPd to listen on specified port\n  if (program.port !== null) {\n    httpd.listen(program.port);\n  } else {\n    httpd.listen();\n  }\n\n  // If a port was not specified on the HTTPd, then output the assigned one\n  if(!program.port) {\n    console.log(chalk.yellow('Interface'), 'Listening on port', chalk.blue(httpd.address().port));\n  }\n\n  // Configure the amount of threads to be used\n  let threads = program.threads || os.cpus().length;\n\n  // File Systems Input Driver\n  let fromFileSystem = () => {\n    if (!program.file) return false;\n\n    // locate the file and prepare to read it\n    let realPath = path.resolve(program.file);\n    let readStream = fs.createReadStream(realPath, config);\n\n    return readStream;\n  }\n\n  // Load the best Input Driver\n  let input = as.decomposed([\n    fromFileSystem\n  ], process.stdin);\n\n  // Create a Readable Stream capable of line-by-line parsing\n  let rl = readline.createInterface({input});\n\n  // Silence children\n  cluster.setupMaster({\n    // silent: true\n  });\n\n  let distribute = (workload) => {\n    for (const id in cluster.workers) {\n      workload(cluster.workers[id]);\n    }\n  };\n\n  let count = () => {\n    var i = 0;\n    distribute(() => i++);\n    return i;\n  }\n\n  var queue = [];\n  var completed = 0;\n\n  let attempt = it => {\n    let amount = count();\n    let total = amount + completed + queue.length;\n\n    let assign = worker => {\n      worker.send(it);\n\n      worker.on('message', function(it) {\n        if (it.constructor === String && it[0] === '!') {\n          console.log(it.substrnig(1));\n          return false;\n        }\n        process.stdout.write((worker.id + ''));\n\n        for (var i = worker.id.toString().length; i < 4; i++) {\n          process.stdout.write(' ');\n        }\n\n        process.stdout.write(chalk.yellow(it.type.toUpperCase()));\n        process.stdout.write(' ');\n        for (var i = it.host.length; i < 15; i++) {\n          process.stdout.write(' ');\n        }\n        process.stdout.write(it.host);\n        process.stdout.write(':');\n        process.stdout.write(chalk.gray(it.port + ''));\n        for (var i = it.port.toString().length; i < 5; i++) {\n          process.stdout.write(' ');\n        }\n        process.stdout.write(it.elapsed + chalk.gray('ms'));\n        for (var i = it.elapsed.toString().length; i < 5; i++) {\n          process.stdout.write(' ');\n        }\n        process.stdout.write(' ');\n        process.stdout.write(JSON.stringify(it.message || it.error));\n        console.log('');\n      });\n\n      worker.on('error', function(error) {\n        console.log('Error', error.toString());\n      });\n\n      if (program.timeout) {\n        setTimeout(function(){\n          worker.kill();\n        }, parseInt(program.timeout, 10) * 1000);\n      }\n\n      worker.on('exit', function() {\n        completed++;\n\n        if (queue.length > 0) {\n          attempt(queue.shift());\n        } else {\n          process.exit();\n        }\n      });\n    };\n\n    if (threads > amount) {\n      assign(cluster.fork());\n    } else {\n      queue.push(it);\n    }\n  }\n\n  // Run each line as a task\n  rl.on('line', it => { attempt(it) });\n}\n\n\n// Children Workers\nif (cluster.isWorker) {\n  process.on('message', function(message) {\n    const launch = new Date();\n\n    // convert line into address:port\n    let decoded = decode(message);\n\n    // prepare each method\n    let proxyOptions = configureProxy(decoded);\n    let socksOptions = configureSocks(decoded);\n\n    // promises for ease of continuity\n    let get = (options) => {\n      return new Promise(function(resolve, reject) {\n        https.get(options, function (response) {\n          const statusCode = response.statusCode;\n\n          var raw = '';\n\n          if (statusCode !== 200) {\n            reject({'error': `Status Code ${statusCode}`, 'from': 'status'});\n          } else {\n            process.send('!http is working so far');\n            response.setEncoding(encoding);\n\n            response.on('error', error => {\n              reject({'error': error, 'from': 'response'});\n            });\n\n            response.on('data', data => {\n              process.send('!receiving data via http');\n              raw += data;\n            });\n\n            response.on('end', () => {\n              resolve({'data': raw});\n            });\n          }\n        }).on('error', function(e) {\n          reject(e);\n        })\n      });\n    }\n\n    let socks = get(socksOptions).then(it => {\n      process.send({\n        message: it,\n        line: message,\n        host: decoded.host,\n        port: decoded.port,\n        elapsed: (new Date()) - launch,\n        type: 'socks'\n      });\n    }).catch(it => {\n      process.send({\n        error: it,\n        line: message,\n        host: decoded.host,\n        port: decoded.port,\n        elapsed: (new Date()) - launch,\n        type: 'socks'\n      })\n    });\n    let proxy = get(proxyOptions).then(it => {\n      process.send({\n        message: it,\n        line: message,\n        host: decoded.host,\n        port: decoded.port,\n        elapsed: (new Date()) - launch,\n        type: 'https'\n      });\n    }).catch(it => {\n      process.send({\n        error: it,\n        line: message,\n        host: decoded.host,\n        port: decoded.port,\n        elapsed: (new Date()) - launch,\n        type: 'https'\n      });\n    });\n  });\n}\n"],"names":["array$","it","Array","prototype","slice","call","combine","array","values","index","concat","indexOf","undefined","length","shift","curry$","method","transform","params","context","input","args","arguments","some","apply","negated$","pair","object","Object","keys","map","key","value","has","property","hasOwnProperty","flatten","isArray","toArray","fromArray","constructor","a","b","reduce","equals","reference","every","item","exists","attempt","mutation","subject","parameters","alternative","response","inject","copy","cycle","prepare","not","tmp","decompose","initial","composer","previous","current","reducer","is$","nodeType","document","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","TEXT_NODE","Compare","result","isElementNode","polarity","isDocumentFragmentNode","isTextNode","$reference","as","encoding","decode","match","parseInt","config","configureProxy","host","port","configureSocks","socksConfig","socks","None","cluster","queue","completed","app","express","httpd","http","io","Socket","use","static","version","description","option","parse","process","argv","program","listen","log","chalk","address","threads","os","fromFileSystem","realPath","path","readStream","fs","decomposed","stdin","rl","readline","distribute","workload","id","count","i","amount","total","assign","send","on","String","substrnig","stdout","write","worker","toString","type","toUpperCase","elapsed","JSON","stringify","message","error","kill","exit","push","launch","Date","decoded","proxyOptions","socksOptions","get","options","Promise","resolve","reject","statusCode","raw","setEncoding","data","e","then","catch","proxy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAaA,IAAIA,SAAS,SAATA,MAAS,CAASC,EAAT,EAAa;QAClBC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,EAA3B,EAA+B,CAA/B,CAAP;CADD;;;;;;;;;;;;;AAeA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;KAC3BC,cAAJ;;SAEQF,MAAMG,MAAN,CAAa,EAAb,CAAR;;QAEO,CAACD,QAAQF,MAAMI,OAAN,CAAcC,SAAd,CAAT,MAAuC,CAAC,CAAxC,IAA6CJ,OAAOK,MAAP,GAAgB,CAApE,EAAuE;QAChEJ,KAAN,IAAeD,OAAOM,KAAP,EAAf;;;QAGMP,MAAMG,MAAN,CAAaF,MAAb,CAAP;;;;;;;;;;;;AAYD,SAASO,MAAT,CAAgBC,MAAhB,EAAwB;;;;;;;;;;;;UAYdC,SAAT,CAAmBC,MAAnB,EAA2B;MACtBC,gBAAJ;;SAEO,YAAmB;qCAAPC,KAAO;SAAA;;;OACrBC,OAAOf,QAAQY,MAAR,EAAgBlB,OAAOsB,SAAP,CAAhB,CAAX;;aAEUH,WAAW,IAArB;;OAEIE,KAAKR,MAAL,GAAcG,OAAOH,MAArB,IAA+BQ,KAAKE,IAAL,CAAU,UAACtB,EAAD;WAAQA,OAAOW,SAAf;IAAV,CAAnC,EAAyE;WACjEK,UAAUI,IAAV,CAAP;IADD,MAEO;WACCL,OAAOQ,KAAP,CAAaL,OAAb,EAAsBE,IAAtB,CAAP;;GARF;;QAYML,OAAOH,MAAP,IAAiB,CAAjB,GAAqBG,MAArB,GAA8BC,UAAU,EAAV,CAArC;;;;;;;;;;;;AAYD,SAASQ,QAAT,CAAkBxB,EAAlB,EAAsB;QACd,YAAW;SACV,CAACA,GAAGuB,KAAH,CAAS,IAAT,EAAeF,SAAf,CAAR;EADD;;;;;;;;;;;;AAcD,SAASI,IAAT,CAAcC,MAAd,EAAsB;QACdC,OAAOC,IAAP,CAAYF,MAAZ,EAAoBG,GAApB,CAAwB,UAACC,GAAD,EAAS;SAChC,EAACA,KAAKA,GAAN,EAAWC,OAAOL,OAAOI,GAAP,CAAlB,EAAP;EADM,CAAP;;;;;;;;;;;;;;AAgBD,IAAIE,MAAMlB,OAAO,UAACY,MAAD,EAASO,QAAT,EAAsB;QAC/BP,OAAOQ,cAAP,CAAsBD,QAAtB,CAAP;CADS,CAAV;;;;;;;;;;;AAaA,SAASE,OAAT,CAAiB7B,KAAjB,EAAwB;KACnB8B,gBAAJ;KACIC,mBAAJ;KACIC,kBAAJ;;WAEU,iBAACtC,EAAD;SAAQA,GAAGuC,WAAH,KAAmBtC,KAA3B;EAAV;cACU,oBAACD,EAAD;SAAQoC,QAAQpC,EAAR,IAAcA,EAAd,GAAmB,CAACA,EAAD,CAA3B;EAAV;aACY,mBAACwC,CAAD,EAAIC,CAAJ;SAAUD,EAAE/B,MAAF,CAASgC,CAAT,CAAV;EAAZ;;QAEOnC,MAAMgB,IAAN,CAAWc,OAAX,CAAP,EAA4B;UACnB9B,MAAMuB,GAAN,CAAUQ,UAAV,EAAmBK,MAAnB,CAA0BJ,SAA1B,CAAR;;;QAGMhC,KAAP;;;;;;;;;;;;;;;;AAgBD,SAASqC,MAAT,CAAgBC,SAAhB,EAA2BlB,MAA3B,EAAmC;;KAE9B,QAAOkB,SAAP,yCAAOA,SAAP,eAA4BlB,MAA5B,yCAA4BA,MAA5B,MACFkB,UAAUL,WAAV,KAA0Bb,OAAOa,WADnC,EACgD;SACxC,KAAP;;;;KAIGK,UAAUL,WAAV,KAA0BZ,MAA9B,EAAsC;SAC9BiB,cAAclB,MAArB;;;QAGMS,QAAQ,CACdV,KAAKmB,SAAL,CADc,EAEdnB,KAAKC,MAAL,CAFc,CAAR,EAINmB,KAJM,CAIA,UAACC,IAAD,EAAU;;MAEZF,SAAJ,EAAeE,KAAKhB,GAApB,KACAE,IAAIN,MAAJ,EAAYoB,KAAKhB,GAAjB,CADA,IAEAa,OAAOC,UAAUE,KAAKhB,GAAf,CAAP,EAA4BJ,OAAOoB,KAAKhB,GAAZ,CAA5B,CAFA;EANM,CAAP;;;;;;;;;;AAmBD,SAASiB,MAAT,CAAgB/C,EAAhB,EAAoB;QACZA,OAAOW,SAAP,IAAoBX,OAAO,IAAlC;;;;;;;;;;;;;;;AAeD,SAASgD,OAAT,CAAiBC,QAAjB,EAA2BC,OAA3B,EAAoC;KAC/BC,mBAAJ;KACIC,oBAAJ;KACIC,iBAAJ;;cAEatD,OAAOsB,SAAP,EAAkBlB,KAAlB,CAAwB,CAAxB,CAAb;eACcgD,WAAWvC,MAAX,KAAsB,CAAtB,GAA0BuC,WAAW,CAAX,CAA1B,GAA0CA,UAAxD;;YAEWF,SAAS1B,KAAT,CAAe,IAAf,EAAqB4B,UAArB,CAAX;;QAEOE,YAAYD,WAAnB;;;AAGD,AAaA;;;;;;;;;;;;AAYA,SAASE,MAAT,CAAgBtD,EAAhB,EAAoBgB,SAApB,EAA+B;KAC1BuC,OAAO,EAAX;;UAESC,KAAT,CAAe1B,GAAf,EAAoBC,KAApB,EAA2B;MACtBA,UAAUwB,IAAd,EAAoB;UACZ,KAAP;;;MAGG,OAAOxB,KAAP,KAAiB,UAArB,EAAiC;UACzBiB,QAAQhC,SAAR,EAAmBe,KAAnB,CAAP;;;MAGG,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAArB,EAA+B;UACvBuB,OAAOvB,KAAP,EAAcf,SAAd,CAAP;;;;;;MAMG,IAAIc,GAAT,IAAgB9B,EAAhB,EAAoB;OACd8B,GAAL,IAAY0B,MAAM1B,GAAN,EAAW9B,GAAG8B,GAAH,CAAX,CAAZ;;;QAGMyB,IAAP;;;;;;;;;;;;;;;;AAgBD,SAASE,OAAT,CAAiBzD,EAAjB,EAAqB;KAChB0D,YAAJ;KAASC,YAAT;;OAEML,OAAOtD,EAAP,EAAWwB,QAAX,CAAN;OACM8B,OAAOI,GAAP,EAAY5C,MAAZ,CAAN;OACMwC,OAAOtD,EAAP,EAAWc,MAAX,CAAN;;KAEI4C,GAAJ,GAAUA,GAAV;;QAEOC,GAAP;;;;;;;;;;;;;;;;;AAiBD,SAASC,SAAT,CAAmBtD,KAAnB,EAA0BuD,OAA1B,EAAmC;KAC9BC,WAAW,SAAXA,QAAW,CAACC,QAAD,EAAWC,OAAX;SAAuBhB,QAAQgB,OAAR,EAAiBD,QAAjB,CAAvB;EAAf;KACIE,UAAU,SAAVA,OAAU,CAACjE,EAAD;SAAQM,MAAMoC,MAAN,CAAaoB,QAAb,EAAuBD,WAAW7D,EAAlC,CAAR;EAAd;;QAEO6D,UAAUI,QAAQJ,OAAR,CAAV,GAA6BI,OAApC;;;AAGD,IAAIC,MAAM;UACA,iBAACxC,MAAD,EAAY;;SAEbA,OAAOyC,QAAP,KAAoBC,SAASC,YAApC;EAHQ;;WAMC,kBAAC3C,MAAD,EAAY;;SAEdA,OAAOyC,QAAP,KAAoBC,SAASE,sBAApC;EARQ;;OAWH,cAAC5C,MAAD,EAAY;;SAEVA,OAAOyC,QAAP,KAAoBC,SAASG,SAApC;EAbQ;;QAgBF5B,MAhBE;WAiBCI;CAjBX;;AAoBAmB,MAAMT,QAAQS,GAAR,CAAN;;IAEMM;kBACO5B,SAAZ,EAAuB;;;OACjBA,SAAL,GAAiBA,SAAjB;;;;;0BAGOlB,QAAQ;OACX+C,eAAJ;;OAEIC,gBAAgB,SAAhBA,aAAgB,CAAC1E,EAAD;WACnBA,GAAGmE,QAAH,KAAgBC,SAASC,YADN;IAApB;;;;;YAMSK,cAAchD,MAAd,CAAT;;UAEO+C,WAAW,CAAC,KAAK7B,SAAL,CAAe+B,QAAlC;;;;2BAGQjD,QAAQ;OACZ+C,eAAJ;;OAEIG,yBAAyB,SAAzBA,sBAAyB,CAAC5E,EAAD;WAC5BA,GAAGmE,QAAH,KAAgBC,SAASE,sBADG;IAA7B;;;;;YAMSM,uBAAuBlD,MAAvB,CAAT;;UAEO+C,WAAW,CAAC,KAAK7B,SAAL,CAAe+B,QAAlC;;;;uBAGIjD,QAAQ;OACRmD,aAAa,SAAbA,UAAa,CAAC7E,EAAD;WAChB0B,OAAOyC,QAAP,KAAoBC,SAASG,SADb;IAAjB;;;;;YAMSM,WAAWnD,MAAX,CAAT;;UAEO+C,WAAW,CAAC,KAAK7B,SAAL,CAAe+B,QAAlC;;;;yBAGMjD,QAAQoD,YAAY;OACtBlC,YAAYkC,cAAcA,UAA9B;;;;2BAGQpD,QAAQ;;;;;AAMlB,AAAO;AACP,AAAO,IAAIqD,KAAK;QACRhF,MADQ;OAET0B,IAFS;SAGPX,MAHO;UAINqB,OAJM;aAKHyB,SALG;UAMNZ;CANH;;;;AC3XP,IAAMgC,WAAW,MAAjB;;;AAGA,IAAIC,SAAS,SAATA,MAAS,KAAM;SACV;UACCjF,GAAGkF,KAAH,CAAS,SAAT,EAAoB,CAApB,CADD;UAECC,SAASnF,GAAGkF,KAAH,CAAS,OAAT,EAAkB,CAAlB,CAAT,EAA+B,EAA/B;GAFR;CADF;;AAOA,IAAIE,SAAS,EAACJ,kBAAD,EAAb;;;AAGA,SAASK,cAAT,CAAwBrF,EAAxB,EAA4B;SACnB;UACCA,GAAGsF,IADJ;UAECtF,GAAGuF,IAFJ;UAGC,uBAHD;aAII;YACD;;GALV;;;;AAWF,SAASC,cAAT,CAAwBxF,EAAxB,EAA4B;MACtByF,cAAc;eACLzF,GAAGsF,IADE;eAELtF,GAAGuF,IAFE;WAGT,CAAEG,UAAA,CAAWC,IAAX,EAAF;GAHT;;SAMO;UACC,eADD;UAEC,GAFD;UAGC,GAHD;WAIE,IAAID,gBAAJ,CAAqBD,WAArB;GAJT;;;;AASF,IAAIG,gBAAJ,EAAsB;MAiFhBC,KAjFgB;MAkFhBC,SAlFgB;;;;;QAGhBC,MAAMC,SAAV;QACIC,QAAQC,WAAA,CAAYH,GAAZ,CAAZ;QACII,KAAKC,OAAOH,KAAP,CAAT;;;QAGII,GAAJ,CAAQL,QAAQM,MAAR,CAAe,QAAf,CAAR;;;iBAGA,CAES,0BAFT;;;KAKGC,OALH,CAKWA,OALX,EAMGC,WANH,CAMeA,WANf;;;KASGC,MATH,CASU,oBATV,EASgC,kCAThC,EAUGA,MAVH,CAUU,cAVV,EAU0B,gCAV1B,EAWGA,MAXH,CAWU,cAXV,EAW0B,gCAX1B,EAYGA,MAZH,CAYU,wBAZV,EAYoC,sCAZpC,EAaGA,MAbH,CAaU,yBAbV,EAaqC,uCAbrC,EAcGA,MAdH,CAcU,eAdV,EAc2B,2CAd3B;;;KAiBGC,KAjBH,CAiBSC,QAAQC,IAjBjB;;;QAoBIC,YAAA,KAAiB,IAArB,EAA2B;YACnBC,MAAN,CAAaD,YAAb;KADF,MAEO;YACCC,MAAN;;;;QAIC,CAACD,YAAJ,EAAkB;cACRE,GAAR,CAAYC,YAAA,CAAa,WAAb,CAAZ,EAAuC,mBAAvC,EAA4DA,UAAA,CAAWf,MAAMgB,OAAN,GAAgB1B,IAA3B,CAA5D;;;;QAIE2B,aAAUL,eAAA,IAAmBM,OAAA,GAAUvG,MAA3C;;;QAGIwG,iBAAiB,SAAjBA,cAAiB,GAAM;UACrB,CAACP,YAAL,EAAmB,OAAO,KAAP;;;UAGfQ,WAAWC,YAAA,CAAaT,YAAb,CAAf;UACIU,aAAaC,mBAAA,CAAoBH,QAApB,EAA8BjC,MAA9B,CAAjB;;aAEOmC,UAAP;KAPF;;;QAWIpG,QAAQ4D,GAAG0C,UAAH,CAAc,CACxBL,cADwB,CAAd,EAETT,QAAQe,KAFC,CAAZ;;;QAKIC,KAAKC,wBAAA,CAAyB,EAACzG,YAAD,EAAzB,CAAT;;;uBAGA,CAAoB;;KAApB;;QAII0G,aAAa,SAAbA,UAAa,CAACC,QAAD,EAAc;WACxB,IAAMC,EAAX,IAAiBnC,eAAjB,EAAkC;iBACvBA,eAAA,CAAgBmC,EAAhB,CAAT;;KAFJ;;QAMIC,QAAQ,SAARA,KAAQ,GAAM;UACZC,IAAI,CAAR;iBACW;eAAMA,GAAN;OAAX;aACOA,CAAP;KAHF;;YAMY,EAjFQ;gBAkFJ,CAlFI;;;QAoFhBjF,UAAU,SAAVA,OAAU,KAAM;UACdkF,SAASF,OAAb;UACIG,QAAQD,SAASpC,SAAT,GAAqBD,MAAMjF,MAAvC;;UAEIwH,SAAS,SAATA,MAAS,SAAU;eACdC,IAAP,CAAYrI,EAAZ;;eAEOsI,EAAP,CAAU,SAAV,EAAqB,UAAStI,EAAT,EAAa;cAC5BA,GAAGuC,WAAH,KAAmBgG,MAAnB,IAA6BvI,GAAG,CAAH,MAAU,GAA3C,EAAgD;oBACtC+G,GAAR,CAAY/G,GAAGwI,SAAH,CAAa,CAAb,CAAZ;mBACO,KAAP;;kBAEMC,MAAR,CAAeC,KAAf,CAAsBC,OAAOZ,EAAP,GAAY,EAAlC;;eAEK,IAAIE,IAAIU,OAAOZ,EAAP,CAAUa,QAAV,GAAqBhI,MAAlC,EAA0CqH,IAAI,CAA9C,EAAiDA,GAAjD,EAAsD;oBAC5CQ,MAAR,CAAeC,KAAf,CAAqB,GAArB;;;kBAGMD,MAAR,CAAeC,KAAf,CAAqB1B,YAAA,CAAahH,GAAG6I,IAAH,CAAQC,WAAR,EAAb,CAArB;kBACQL,MAAR,CAAeC,KAAf,CAAqB,GAArB;eACK,IAAIT,IAAIjI,GAAGsF,IAAH,CAAQ1E,MAArB,EAA6BqH,IAAI,EAAjC,EAAqCA,GAArC,EAA0C;oBAChCQ,MAAR,CAAeC,KAAf,CAAqB,GAArB;;kBAEMD,MAAR,CAAeC,KAAf,CAAqB1I,GAAGsF,IAAxB;kBACQmD,MAAR,CAAeC,KAAf,CAAqB,GAArB;kBACQD,MAAR,CAAeC,KAAf,CAAqB1B,UAAA,CAAWhH,GAAGuF,IAAH,GAAU,EAArB,CAArB;eACK,IAAI0C,IAAIjI,GAAGuF,IAAH,CAAQqD,QAAR,GAAmBhI,MAAhC,EAAwCqH,IAAI,CAA5C,EAA+CA,GAA/C,EAAoD;oBAC1CQ,MAAR,CAAeC,KAAf,CAAqB,GAArB;;kBAEMD,MAAR,CAAeC,KAAf,CAAqB1I,GAAG+I,OAAH,GAAa/B,UAAA,CAAW,IAAX,CAAlC;eACK,IAAIiB,IAAIjI,GAAG+I,OAAH,CAAWH,QAAX,GAAsBhI,MAAnC,EAA2CqH,IAAI,CAA/C,EAAkDA,GAAlD,EAAuD;oBAC7CQ,MAAR,CAAeC,KAAf,CAAqB,GAArB;;kBAEMD,MAAR,CAAeC,KAAf,CAAqB,GAArB;kBACQD,MAAR,CAAeC,KAAf,CAAqBM,KAAKC,SAAL,CAAejJ,GAAGkJ,OAAH,IAAclJ,GAAGmJ,KAAhC,CAArB;kBACQpC,GAAR,CAAY,EAAZ;SA5BF;;eA+BOuB,EAAP,CAAU,OAAV,EAAmB,UAASa,KAAT,EAAgB;kBACzBpC,GAAR,CAAY,OAAZ,EAAqBoC,MAAMP,QAAN,EAArB;SADF;;YAII/B,eAAJ,EAAqB;qBACR,YAAU;mBACZuC,IAAP;WADF,EAEGjE,SAAS0B,eAAT,EAA0B,EAA1B,IAAgC,IAFnC;;;eAKKyB,EAAP,CAAU,MAAV,EAAkB,YAAW;;;cAGvBzC,MAAMjF,MAAN,GAAe,CAAnB,EAAsB;oBACZiF,MAAMhF,KAAN,EAAR;WADF,MAEO;oBACGwI,IAAR;;SANJ;OA5CF;;UAuDInC,aAAUgB,MAAd,EAAsB;eACbtC,YAAA,EAAP;OADF,MAEO;cACC0D,IAAN,CAAWtJ,EAAX;;KA9DJ;;;OAmEGsI,EAAH,CAAM,MAAN,EAAc,cAAM;cAAUtI,EAAR;KAAtB;;;;;AAKF,IAAI4F,gBAAJ,EAAsB;UACZ0C,EAAR,CAAW,SAAX,EAAsB,UAASY,OAAT,EAAkB;QAChCK,SAAS,IAAIC,IAAJ,EAAf;;;QAGIC,UAAUxE,OAAOiE,OAAP,CAAd;;;QAGIQ,eAAerE,eAAeoE,OAAf,CAAnB;QACIE,eAAenE,eAAeiE,OAAf,CAAnB;;;QAGIG,SAAM,SAANA,MAAM,CAACC,OAAD,EAAa;aACd,IAAIC,OAAJ,CAAY,UAASC,UAAT,EAAkBC,MAAlB,EAA0B;iBAC3C,CAAUH,OAAV,EAAmB,UAAUxG,QAAV,EAAoB;cAC/B4G,aAAa5G,SAAS4G,UAA5B;;cAEIC,MAAM,EAAV;;cAEID,eAAe,GAAnB,EAAwB;mBACf,EAAC,0BAAwBA,UAAzB,EAAuC,QAAQ,QAA/C,EAAP;WADF,MAEO;oBACG5B,IAAR,CAAa,yBAAb;qBACS8B,WAAT,CAAqBnF,QAArB;;qBAESsD,EAAT,CAAY,OAAZ,EAAqB,iBAAS;qBACrB,EAAC,SAASa,KAAV,EAAiB,QAAQ,UAAzB,EAAP;aADF;;qBAISb,EAAT,CAAY,MAAZ,EAAoB,gBAAQ;sBAClBD,IAAR,CAAa,0BAAb;qBACO+B,IAAP;aAFF;;qBAKS9B,EAAT,CAAY,KAAZ,EAAmB,YAAM;yBACf,EAAC,QAAQ4B,GAAT,EAAR;aADF;;SApBJ,EAwBG5B,EAxBH,CAwBM,OAxBN,EAwBe,UAAS+B,CAAT,EAAY;iBAClBA,CAAP;SAzBF;OADK,CAAP;KADF;;QAgCI3E,WAAQkE,OAAID,YAAJ,EAAkBW,IAAlB,CAAuB,cAAM;cAC/BjC,IAAR,CAAa;iBACFrI,EADE;cAELkJ,OAFK;cAGLO,QAAQnE,IAHH;cAILmE,QAAQlE,IAJH;iBAKD,IAAIiE,IAAJ,EAAD,GAAeD,MALb;cAML;OANR;KADU,EASTgB,KATS,CASH,cAAM;cACLlC,IAAR,CAAa;eACJrI,EADI;cAELkJ,OAFK;cAGLO,QAAQnE,IAHH;cAILmE,QAAQlE,IAJH;iBAKD,IAAIiE,IAAJ,EAAD,GAAeD,MALb;cAML;OANR;KAVU,CAAZ;QAmBIiB,QAAQZ,OAAIF,YAAJ,EAAkBY,IAAlB,CAAuB,cAAM;cAC/BjC,IAAR,CAAa;iBACFrI,EADE;cAELkJ,OAFK;cAGLO,QAAQnE,IAHH;cAILmE,QAAQlE,IAJH;iBAKD,IAAIiE,IAAJ,EAAD,GAAeD,MALb;cAML;OANR;KADU,EASTgB,KATS,CASH,cAAM;cACLlC,IAAR,CAAa;eACJrI,EADI;cAELkJ,OAFK;cAGLO,QAAQnE,IAHH;cAILmE,QAAQlE,IAJH;iBAKD,IAAIiE,IAAJ,EAAD,GAAeD,MALb;cAML;OANR;KAVU,CAAZ;GA9DF;"}